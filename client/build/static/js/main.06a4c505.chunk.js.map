{"version":3,"sources":["App.js","index.js"],"names":["movies","name","price","occupied","seats","Array","from","length","_","i","App","_useState","useState","_useState2","_slicedToArray","selectedMovie","setSelectedMovie","_useState3","_useState4","selectedSeats","setSelectedSeats","React","createElement","className","Movies","movie","onChange","ShowCase","Cinema","onSelectedSeatsChange","_ref","htmlFor","id","value","e","find","target","map","key","_ref2","handleSelectedState","seat","isSelected","includes","filter","selectedSeat","concat","_toConsumableArray","isOccupied","tabIndex","clsx","onClick","onKeyPress","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sLAUMA,EAAS,CACb,CACEC,KAAM,UACNC,MAAO,GACPC,SAAU,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,IAE/B,CACEF,KAAM,QACNC,MAAO,GACPC,SAAU,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,KAEhC,CACEF,KAAM,YACNC,MAAO,EACPC,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,EAAG,IAEhC,CACEF,KAAM,gBACNC,MAAO,EACPC,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,MAI7BC,EAAQC,MAAMC,KAAK,CAAEC,OAAQ,KAAW,SAACC,EAAGC,GAAC,OAAKA,IAEzC,SAASC,IACtB,IAAAC,EAA0CC,mBAASZ,EAAO,IAAGa,EAAAC,YAAAH,EAAA,GAAtDI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GACtCI,EAA0CL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEtC,OACEG,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAACE,EAAM,CACLC,MAAOV,EACPW,SAAU,SAAAD,GACRL,EAAiB,IACjBJ,EAAiBS,MAGrBJ,IAAAC,cAACK,EAAQ,MACTN,IAAAC,cAACM,EAAM,CACLH,MAAOV,EACPI,cAAeA,EACfU,sBAAuB,SAAAV,GAAa,OAAIC,EAAiBD,MAG3DE,IAAAC,cAAA,KAAGC,UAAU,QAAO,qBACAF,IAAAC,cAAA,QAAMC,UAAU,SAASJ,EAAcZ,QAAe,IAAI,yBACrD,IACvBc,IAAAC,cAAA,QAAMC,UAAU,SACbJ,EAAcZ,OAASQ,EAAcb,MAAM,OAOtD,SAASsB,EAAMM,GAAsB,IAAnBL,EAAKK,EAALL,MAAOC,EAAQI,EAARJ,SACvB,OACEL,IAAAC,cAAA,OAAKC,UAAU,UACbF,IAAAC,cAAA,SAAOS,QAAQ,SAAQ,gBACvBV,IAAAC,cAAA,UACEU,GAAG,QACHC,MAAOR,EAAMxB,KACbyB,SAAU,SAAAQ,GACRR,EAAS1B,EAAOmC,KAAK,SAAAV,GAAK,OAAIA,EAAMxB,OAASiC,EAAEE,OAAOH,WAGvDjC,EAAOqC,IAAI,SAAAZ,GAAK,OACfJ,IAAAC,cAAA,UAAQgB,IAAKb,EAAMxB,KAAMgC,MAAOR,EAAMxB,MACnCwB,EAAMxB,KAAK,MAAIwB,EAAMvB,MAAM,SAQxC,SAASyB,IACP,OACEN,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAAA,UACED,IAAAC,cAAA,QAAMC,UAAU,SAAS,IAACF,IAAAC,cAAA,aAAO,QAEnCD,IAAAC,cAAA,UACED,IAAAC,cAAA,QAAMC,UAAU,kBAAkB,IAACF,IAAAC,cAAA,aAAO,aAE5CD,IAAAC,cAAA,UACED,IAAAC,cAAA,QAAMC,UAAU,kBAAkB,IAACF,IAAAC,cAAA,aAAO,cAMlD,SAASM,EAAMW,GAAkD,IAA/Cd,EAAKc,EAALd,MAAON,EAAaoB,EAAbpB,cAAeU,EAAqBU,EAArBV,sBACtC,SAASW,EAAoBC,GAC3B,IAAMC,EAAavB,EAAcwB,SAASF,GAExCZ,EADEa,EAEAvB,EAAcyB,OAAO,SAAAC,GAAY,OAAIA,IAAiBJ,IAGnC,GAAAK,OAAAC,YAAK5B,GAAa,CAAEsB,KAI7C,OACEpB,IAAAC,cAAA,OAAKC,UAAU,UACbF,IAAAC,cAAA,OAAKC,UAAU,WAEfF,IAAAC,cAAA,OAAKC,UAAU,SACZnB,EAAMiC,IAAI,SAAAI,GACT,IAAMC,EAAavB,EAAcwB,SAASF,GACpCO,EAAavB,EAAMtB,SAASwC,SAASF,GAC3C,OACEpB,IAAAC,cAAA,QACE2B,SAAS,IACTX,IAAKG,EACLlB,UAAW2B,YACT,OACAR,GAAc,WACdM,GAAc,YAEhBG,QAASH,EAAa,KAAO,kBAAMR,EAAoBC,IACvDW,WACEJ,EACI,KACA,SAAAd,GACgB,UAAVA,EAAEI,KACJE,EAAoBC,UCrI5C,IAAMY,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOpC,IAAAC,cAACZ,EAAG,MAAK2C","file":"static/js/main.06a4c505.chunk.js","sourcesContent":["/**\n * inspiration repo: https://github.com/bradtraversy/vanillawebprojects\n * movie seat booking: https://github.com/bradtraversy/vanillawebprojects/tree/master/movie-seat-booking\n * but in react ðŸ¤“\n */\n\nimport './styles.css'\nimport React, { useState } from 'react'\nimport clsx from 'clsx'\n\nconst movies = [\n  {\n    name: 'Avenger',\n    price: 10,\n    occupied: [20, 21, 30, 1, 2, 8],\n  },\n  {\n    name: 'Joker',\n    price: 12,\n    occupied: [9, 41, 35, 11, 65, 26],\n  },\n  {\n    name: 'Toy story',\n    price: 8,\n    occupied: [37, 25, 44, 13, 2, 3],\n  },\n  {\n    name: 'the lion king',\n    price: 9,\n    occupied: [10, 12, 50, 33, 28, 47],\n  },\n]\n\nconst seats = Array.from({ length: 52 * 19 }, (_, i) => i)\n\nexport default function App() {\n  const [selectedMovie, setSelectedMovie] = useState(movies[0])\n  const [selectedSeats, setSelectedSeats] = useState([])\n\n  return (\n    <div className=\"App\">\n      <Movies\n        movie={selectedMovie}\n        onChange={movie => {\n          setSelectedSeats([])\n          setSelectedMovie(movie)\n        }}\n      />\n      <ShowCase />\n      <Cinema\n        movie={selectedMovie}\n        selectedSeats={selectedSeats}\n        onSelectedSeatsChange={selectedSeats => setSelectedSeats(selectedSeats)}\n      />\n\n      <p className=\"info\">\n        You have selected <span className=\"count\">{selectedSeats.length}</span>{' '}\n        seats for the price of{' '}\n        <span className=\"total\">\n          {selectedSeats.length * selectedMovie.price}$\n        </span>\n      </p>\n    </div>\n  )\n}\n\nfunction Movies({ movie, onChange }) {\n  return (\n    <div className=\"Movies\">\n      <label htmlFor=\"movie\">Pick a movie</label>\n      <select\n        id=\"movie\"\n        value={movie.name}\n        onChange={e => {\n          onChange(movies.find(movie => movie.name === e.target.value))\n        }}\n      >\n        {movies.map(movie => (\n          <option key={movie.name} value={movie.name}>\n            {movie.name} (${movie.price})\n          </option>\n        ))}\n      </select>\n    </div>\n  )\n}\n\nfunction ShowCase() {\n  return (\n    <ul className=\"ShowCase\">\n      <li>\n        <span className=\"seat\" /> <small>N/A</small>\n      </li>\n      <li>\n        <span className=\"seat selected\" /> <small>Selected</small>\n      </li>\n      <li>\n        <span className=\"seat occupied\" /> <small>Occupied</small>\n      </li>\n    </ul>\n  )\n}\n\nfunction Cinema({ movie, selectedSeats, onSelectedSeatsChange }) {\n  function handleSelectedState(seat) {\n    const isSelected = selectedSeats.includes(seat)\n    if (isSelected) {\n      onSelectedSeatsChange(\n        selectedSeats.filter(selectedSeat => selectedSeat !== seat),\n      )\n    } else {\n      onSelectedSeatsChange([...selectedSeats, seat])\n    }\n  }\n\n  return (\n    <div className=\"Cinema\">\n      <div className=\"screen\" />\n\n      <div className=\"seats\">\n        {seats.map(seat => {\n          const isSelected = selectedSeats.includes(seat)\n          const isOccupied = movie.occupied.includes(seat)\n          return (\n            <span\n              tabIndex=\"0\"\n              key={seat}\n              className={clsx(\n                'seat',\n                isSelected && 'selected',\n                isOccupied && 'occupied',\n              )}\n              onClick={isOccupied ? null : () => handleSelectedState(seat)}\n              onKeyPress={\n                isOccupied\n                  ? null\n                  : e => {\n                      if (e.key === 'Enter') {\n                        handleSelectedState(seat)\n                      }\n                    }\n              }\n            />\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}